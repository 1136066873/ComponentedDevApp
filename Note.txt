
----------------------------------------------------------------------------------------------------
update on 2020.04.06 16:49
遇到：
Error:Execution failed for task ':app:processDebugManifest'.
> Manifest merger failed : Attribute application@name value=(com.heguodong.beijing.componenteddevapp.MyApplication) from AndroidManifest.xml:7:9-38
  	is also present at [:advice] AndroidManifest.xml:11:18-79 value=(com.heguodong.beijing.advice.AdviceApplication).
  	Suggestion: add 'tools:replace="android:name"' to <application> element at AndroidManifest.xml:6:5-21:19 to override.

  	时，问题多半是多个依赖 module 中，声明了好几个 Application ，导致 Manifest 在 merger Application 的时候 failed。
  	处理：
  	1.如果功能 Module 有自定义 Application ，主 Module 中没有自定义 Application，这时会自动引用功能 Module 中的自定义 Application。
  	2.如果功能 Module 没有自定义 Application ，主 Module 中有自定义 Application，这时会自动引用主 Module 中的自定义 Application。
  	3.如果多个功能 Module 有多个自定义 Application ，则需要解决冲突，每个功能 Module 中都需要加上 tools:replace="android:name"，问题修改
  	完成之后，Application 最终会载入后编译的 Module 的 Application。
  	4.如果主 Module 中有自定义 Application，其他功能 Module 也有自定义 Application，在主 Module 中添加 tools:replace="android:name" 之后，
  	会发现最后编译的主 Module 的 Application 在 AndroidManifest 中。

----------------------------------------------------------------------------------------------------

update on 2020.04.06 16:15
今天在 Application 中添加Activity 生命周期变化的函数监听，打印日志如下：
04-06 16:14:40.087 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication is create
04-06 16:14:40.144 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication - onActivityCreated -> ComponentInfo{com.heguodong.beijing.componenteddevapp/com.heguodong.beijing.componenteddevapp.MainActivity}
04-06 16:14:40.279 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication - onActivityStarted -> ComponentInfo{com.heguodong.beijing.componenteddevapp/com.heguodong.beijing.componenteddevapp.MainActivity}
04-06 16:14:40.286 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication - onActivityResumed -> ComponentInfo{com.heguodong.beijing.componenteddevapp/com.heguodong.beijing.componenteddevapp.MainActivity}
04-06 16:15:08.184 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication - onActivityPaused -> ComponentInfo{com.heguodong.beijing.componenteddevapp/com.heguodong.beijing.componenteddevapp.MainActivity}
04-06 16:15:08.747 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication - onActivityStopped -> ComponentInfo{com.heguodong.beijing.componenteddevapp/com.heguodong.beijing.componenteddevapp.MainActivity}
04-06 16:15:08.750 25365-25365/com.heguodong.beijing.componenteddevapp E/heguodong_001: MyApplication - onActivityDestroyed -> ComponentInfo{com.heguodong.beijing.componenteddevapp/com.heguodong.beijing.componenteddevapp.MainActivity}



----------------------------------------------------------------------------------------------------

update on 2020.04.04 18:57
这个工程主要是为了学习组件化开发的思路而创建。

基础：
一般的，在 app 开发时，基本就是项目根目录下只有一个主 app module ，然后所有人去维护开发这个主 module。
但是这样做的弊端是：随着应用业务越来越多，业务越来越复杂，后期 app 维护迭代起来是步步维艰的。

因此，应用组件化开发，是一个趋势。

名词解释先：
【组件】指的是单一的功能组件。比如视频组件，支付组件，路由组件等等。每个组件都能单独抽出来制作成SDK。

【模块】指的是独立的业务模块。比如直播模块，首页模块，即时通讯模块等等。

模块相对于组件来说，其粒度更大，一个模块可能包含多个组件。

组件化开发的好处：
1.避免重复造轮子。
2.减少人力投入，提高开发效率。
3.确保整体技术方案的统一性。
4.为未来插件化公用同一套底层模型做准备。

模块化开发的优点是：
1.使业务模块解耦，业务移植更加简单。
2.多团队根据业务内容进行并行开发和测试。
3.单个业务可以单独编译打包，加快编译速度。
4.多个 app 共用模块，降低了研发和维护成本。

----------------------------------------------------------------------------------------------------